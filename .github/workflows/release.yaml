name: Release

on:
  pull_request:
    types:
      - closed

permissions:
  contents: write
  id-token: write

jobs:
  check-release-conditions:
    name: Check Release Conditions
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true &&
        github.event.pull_request.base.ref == github.base_ref &&
        startsWith(github.event.pull_request.head.ref, 'release/v') &&
        startsWith(github.event.pull_request.title, 'Bump version to')
    steps:
      - run: echo "üê±"
  publish-packages:
    name: Publish Packages
    runs-on: ubuntu-latest
    needs: check-release-conditions
    if: needs.check-release-conditions.result == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set-up pnpm
        uses: pnpm/action-setup@v4

      - name: Set-up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Publish to npm
        run: pnpm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
  create-release:
    name: Create Release on GitHub
    runs-on: ubuntu-latest
    needs: publish-packages
    if: needs.publish-packages.result == 'success'
    steps:
      - name: Create release
        env:
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          GH_TOKEN: ${{ github.token }}
        run: |
          RELEASE_TAG=${BRANCH_NAME#*/} \
            gh release create "$RELEASE_TAG" --title "Release $RELEASE_TAG" --generate-notes
